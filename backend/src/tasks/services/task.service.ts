import { Injectable, NotFoundException } from '@nestjs/common';
import { PrismaClient, Task } from '@prisma/client';
import { CreateTaskDto } from '../models/create-task.dto';
import { UpdateTaskDto } from '../models/update-task.dto';

/**
 * Service for managing tasks
 * AI Integration: Generated by ChatGPT
 */
const prisma = new PrismaClient();

@Injectable()
export class TaskService {
  async getAll(): Promise<Task[]> {
    return await prisma.task.findMany({ orderBy: { createdAt: 'desc' } });
  }

  async create(createTaskDto: CreateTaskDto): Promise<Task> {
    return await prisma.task.create({ data: { ...createTaskDto } });
  }

  async update(id: number, updateTaskDto: UpdateTaskDto): Promise<Task> {
    const task = await prisma.task.findUnique({ where: { id } });
    if (!task) throw new NotFoundException('Task not found');
    return await prisma.task.update({ where: { id }, data: updateTaskDto });
  }
}
